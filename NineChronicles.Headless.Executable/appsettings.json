{
    "$schema": "./appsettings-schema.json",
    "Serilog": {
        "Using": [
            "Serilog.Expressions",
            "Serilog.Sinks.Console",
            "Serilog.Sinks.RollingFile"
        ],
        "MinimumLevel": "Debug",
        "WriteTo": [
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "WriteTo": [
                            {
                                "Name": "Console",
                                "Args": {
                                    "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact",
                                    "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] [{Source}] {Message:lj}{NewLine}{Exception}"
                                }
                            }
                        ],
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "Source is not null"
                                }
                            }
                        ]
                    }
                }
            },
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "WriteTo": [
                            {
                                "Name": "Console",
                                "Args": {
                                    "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact",
                                    "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"
                                }
                            }
                        ],
                        "Filter": [
                            {
                                "Name": "ByExcluding",
                                "Args": {
                                    "expression": "Source is not null"
                                }
                            }
                        ]
                    }
                }
            }
        ],
        "Filter": [
            {
                "Name": "ByExcluding",
                "Args": {
                    "expression": "SourceContext = 'Libplanet.Stun.TurnClient'"
                }
            }
        ]
    },
    "Headless": {
        "AppProtocolVersionString": "",
        "GenesisBlockPath": "",
        "StoreType": "rocksdb",
        "StorePath": "",
        "Port": 31234,
        "IceServerStrings": [],
        "PeerStrings": [],
        "TrustedAppProtocolVersionSignerStrings": [],
        "NoMiner": true,
        "RpcServer": true,
        "RpcListenHost": "127.0.0.1",
        "RpcListenPort": 31238,
        "RpcRemoteServer": true,
        "GraphQLServer": true,
        "GraphQLHost": "127.0.0.1",
        "GraphQLPort": 31280,
        "NoCors": true,
        "Confirmations": 0,
        "ChainTipStaleBehaviorType": "reboot"
    },
    "Logging": {
        "LogLevel": {
            "Microsoft": "None"
        }
    },
    "IpRateLimiting": {
        "EnableEndpointRateLimiting": false,
        "StackBlockedRequests": true,
        "RealIpHeader": "X-Real-IP",
        "HttpStatusCode": 429,
        "IpWhitelist": [ "127.0.0.1" ],
        "GeneralRules": [
            {
                "Endpoint": "*:/IBlockChainService/PutTransaction",
                "Period": "1s",
                "Limit": 1
            },
            {
                "Endpoint": "*:/graphql/stagetransaction",
                "Period": "1s",
                "Limit": 1
            },
            {
                "Endpoint": "*:/IBlockChainService/*",
                "Period": "1s",
                "Limit": 10
            },
            {
                "Endpoint": "*:/graphql",
                "Period": "1s",
                "Limit": 15
            }
        ],
        "QuotaExceededResponse": {
            "Content": "{{ \"message\": \"Whoa! Calm down, cowboy!\", \"details\": \"Quota exceeded. Maximum allowed: {0} per {1}. Please try again in {2} second(s).\" }}",
            "ContentType": "application/json",
            "StatusCode": 429
        }
    }
}
